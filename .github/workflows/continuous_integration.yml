# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "quality"
  quality:
    name: Quality checks
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      DB_DATABASE: db_api_ddd_template_test
      DB_USER: root
      DB_PASSWORD: root

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs single commands using the runners shell
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Start and set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -e 'SHOW DATABASES;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: PHP Unit tests
        if: ${{ always() }}
        run: vendor/bin/phpunit

      - name: PHP Code Sniffer
        if: ${{ always() }}
        run: vendor/bin/phpcs src/ tests/ # --standard=PSR2 src

      - name: PHP Stan
        if: ${{ always() }}
        run: vendor/bin/phpstan analyse -c phpstan.neon

      - name: PHP Mess Detector
        if: ${{ always() }}
        run: vendor/bin/phpmd src/ text cleancode,codesize,controversial,design,naming,unusedcode

      - name: Twigcs (Twig checkstyle)
        if: ${{ always() }}
        run: vendor/bin/twigcs templates/
